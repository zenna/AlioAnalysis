PlotGrid[z_, xy_] :=
  Module[{x, y, p1, p2, p3, xyz},
    x = xy[[1]];
    y = xy[[2]];
    p1 = {x, y, 0};
    p2 = {x, 0, z};
    p3 = {0, y, z};
    xyz = {x, y, z};
    Graphics3D[{
        Thick,
        Red,
        Line[{p1, xyz}],
        Red,
        Line[{p2, xyz}],
        Red,
        Line[{p3, xyz}],
      }, Axes -> True
    ]]

(*argmin theta such that inv(y; theta) in {xlb, xub}, {ylb, yub}*)
FindMinTheta[xlb_, xub_, ylb_, yub_, z_, pinv_] :=
  With[{xy = pinv[z, theta]},
        MinValue[{theta,
                  xlb <= xy[[1]] <= xub && ylb <= xy[[2]] <= yub}, {theta}]]

FindMaxTheta[xlb_, xub_, ylb_, yub_, z_, pinv_] :=
  With[{xy = pinv[z, theta]},
        MaxValue[{theta,
                  xlb <= xy[[1]] <= xub && ylb <= xy[[2]] <= yub}, {theta}]]

PlotPy3D[fwd_, pinv_, xlb_, xub_, ylb_, yub_, z_]  :=
  Module[{surface, tmin, tmax},
    surface = Plot3D[fwd[x, y], {x, xlb, xub}, {y, ylb, yub},
                      PlotTheme -> "Scientific",
                      PlotRange -> {Full, Full, Full},
                      PlotStyle->Opacity[0.5]];
    tmin = FindMinTheta[xlb, xub, ylb, yub, z, pinv];
    tmax = FindMaxTheta[xlb, xub, ylb, yub, z, pinv];
    Animate[Show[PlotGrid[z, pinv[z, theta]], surface],
            {theta, tmin, tmax}]]

Fwd[x_, y_] := x + y
Inv[z_, theta_] := {z - theta, theta}

mul[x_,y_] := x * y
invmul[z_, theta_] := {z/theta, theta}

lb = 0
ub = 2
lb = -2
ub = 2
PlotPy3D[mul, invmul, -2, 2, -2, 2, 1]
